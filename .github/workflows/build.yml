name: Build assets
on: push

jobs:
  build_exe:
    name: Build exe files
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install pipenv
        run: python -m pip install --upgrade pip pipenv

      - name: Set PIPENV_VENV_IN_PROJECT
        run: echo '::set-env name=PIPENV_VENV_IN_PROJECT::true'
        
      - name: Cache venv
        uses: actions/cache@v2
        with:
          path: ./data/.venv
          key: ${{ runner.os }}-${{ hashFiles('./data/Pipfile.lock') }}
      
      - name: Install dependencies
        run: pipenv install --dev --system --deploy
        working-directory: ./data
      
      - name: Build exe files
        run: pipenv run build
        working-directory: ./data
      
      - name: Upload exe files
        uses: actions/upload-artifact@v1
        with:
          name: exe_files
          path: ./*.exe
        
  build_assets:
    name: Build assets
    runs-on: ubuntu-latest
    steps:
      - name: Get majsoul version
        id: get-majsoul-version
        run: |
          echo "::set-output name=json::$(curl https://mahjongsoul.game.yo-star.com/version.json | md5sum)"

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache data
        uses: actions/cache@v2
        with:
          path: ./data/assets-original
          key: ${{ runner.os }}-${{ steps.get-majsoul-version.outputs.json }}

      - name: Login to Github Package Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin

      - name: Pull image from Github Package Registry or Build image
        run: docker-compose pull || docker-compose build --force-rm
        working-directory: ./data

      - name: Push image to Github Package Registry
        run: docker-compose push mpk || true
        working-directory: ./data

      - name: Run docker image to build
        run: docker-compose run --rm mpk all
        working-directory: ./data

      - name: Upload built result
        uses: actions/upload-artifact@v1
        with:
          name: asset_files
          path: ./

  #     - name: Commit changes
  #       uses: EndBug/add-and-commit@v4
  #       with:
  #         author_name: Github Action
  #         author_email: github-action@nothing.local
  #         message: "Build Assets"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
